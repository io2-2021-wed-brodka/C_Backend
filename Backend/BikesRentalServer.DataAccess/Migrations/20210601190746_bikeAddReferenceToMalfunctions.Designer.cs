// <auto-generated />
using System;
using BikesRentalServer.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BikesRentalServer.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210601190746_bikeAddReferenceToMalfunctions")]
    partial class bikeAddReferenceToMalfunctions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("BikesRentalServer.Models.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.HasIndex("UserId");

                    b.ToTable("Bikes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StationId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            StationId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            StationId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            StationId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            StationId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            StationId = 3,
                            Status = 0
                        });
                });

            modelBuilder.Entity("BikesRentalServer.Models.Malfunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BikeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DetectionDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReportingUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.HasIndex("ReportingUserId");

                    b.ToTable("Malfunctions");
                });

            modelBuilder.Entity("BikesRentalServer.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BikeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BikesRentalServer.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wenus",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Planeta Małp",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mars",
                            Status = 0
                        });
                });

            modelBuilder.Entity("BikesRentalServer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918",
                            Role = 2,
                            Status = 0,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BikesRentalServer.Models.Bike", b =>
                {
                    b.HasOne("BikesRentalServer.Models.Station", "Station")
                        .WithMany("Bikes")
                        .HasForeignKey("StationId");

                    b.HasOne("BikesRentalServer.Models.User", "User")
                        .WithMany("RentedBikes")
                        .HasForeignKey("UserId");

                    b.Navigation("Station");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BikesRentalServer.Models.Malfunction", b =>
                {
                    b.HasOne("BikesRentalServer.Models.Bike", "Bike")
                        .WithMany("Malfunctions")
                        .HasForeignKey("BikeId");

                    b.HasOne("BikesRentalServer.Models.User", "ReportingUser")
                        .WithMany()
                        .HasForeignKey("ReportingUserId");

                    b.Navigation("Bike");

                    b.Navigation("ReportingUser");
                });

            modelBuilder.Entity("BikesRentalServer.Models.Reservation", b =>
                {
                    b.HasOne("BikesRentalServer.Models.Bike", "Bike")
                        .WithMany()
                        .HasForeignKey("BikeId");

                    b.HasOne("BikesRentalServer.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId");

                    b.Navigation("Bike");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BikesRentalServer.Models.Bike", b =>
                {
                    b.Navigation("Malfunctions");
                });

            modelBuilder.Entity("BikesRentalServer.Models.Station", b =>
                {
                    b.Navigation("Bikes");
                });

            modelBuilder.Entity("BikesRentalServer.Models.User", b =>
                {
                    b.Navigation("RentedBikes");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
